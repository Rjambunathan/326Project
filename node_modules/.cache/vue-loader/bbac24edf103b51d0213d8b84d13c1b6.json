{"remainingRequest":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewsmith/Computer Science/School/CompSci326/326Project/src/components/Enrollment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/src/components/Enrollment.vue","mtime":1575227739625},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0Vucm9sbG1lbnQnCn0KLy8gLy8gUHJlZmVyIGNhbWVyYSByZXNvbHV0aW9uIG5lYXJlc3QgdG8gMTI4MHg3MjAuCi8vIHZhciBjb25zdHJhaW50cyA9IHsgYXVkaW86IGZhbHNlLCB2aWRlbzogeyB3aWR0aDogMTI4MCwgaGVpZ2h0OiA3MjAgfSB9OwovLwovLwovLyBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShjb25zdHJhaW50cykKLy8gICAgIC50aGVuKGZ1bmN0aW9uKG1lZGlhU3RyZWFtKSB7Ci8vICAgICAgICAgdmFyIHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndmlkZW8nKTsKLy8gICAgICAgICB2aWRlby5zcmNPYmplY3QgPSBtZWRpYVN0cmVhbTsKLy8gICAgICAgICB2aWRlby5vbmxvYWRlZG1ldGFkYXRhID0gZnVuY3Rpb24oKSB7Ci8vICAgICAgICAgICAgIHZpZGVvLnBsYXkoKTsKLy8gICAgICAgICB9OwovLyAgICAgfSkKLy8gICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHsgY29uc29sZS5sb2coZXJyLm5hbWUgKyAiOiAiICsgZXJyLm1lc3NhZ2UpOyB9KTsgLy8gYWx3YXlzIGNoZWNrIGZvciBlcnJvcnMgYXQgdGhlIGVuZC4KCmxldCB2aWRlb0RldmljZTsKbGV0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKTsKbGV0IHBob3RvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bob3RvJyk7CgpuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7dmlkZW86IHRydWV9KS50aGVuKGdvdE1lZGlhKTsKCmZ1bmN0aW9uIGdvdE1lZGlhKG1lZGlhU3RyZWFtKSB7CiAgICAvLyBFeHRyYWN0IHZpZGVvIHRyYWNrLgogICAgdmlkZW9EZXZpY2UgPSBtZWRpYVN0cmVhbS5nZXRWaWRlb1RyYWNrcygpWzBdOwogICAgLy8gQ2hlY2sgaWYgdGhpcyBkZXZpY2Ugc3VwcG9ydHMgYSBwaWN0dXJlIG1vZGUuLi4KICAgIGxldCBjYXB0dXJlRGV2aWNlID0gbmV3IEltYWdlQ2FwdHVyZSh2aWRlb0RldmljZSk7CiAgICBpZiAoY2FwdHVyZURldmljZSkgewogICAgICAgIGNhcHR1cmVEZXZpY2UudGFrZVBob3RvKCkudGhlbihwcm9jZXNzUGhvdG8pLmNhdGNoKHN0b3BDYW1lcmEpOwogICAgICAgIGNhcHR1cmVEZXZpY2UuZ3JhYkZyYW1lKCkudGhlbihwcm9jZXNzRnJhbWUpLmNhdGNoKHN0b3BDYW1lcmEpOwogICAgfQp9CgpmdW5jdGlvbiBwcm9jZXNzUGhvdG8oYmxvYikgewogICAgcGhvdG8uc3JjID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7Cn0KCmZ1bmN0aW9uIHByb2Nlc3NGcmFtZShpbWFnZUJpdG1hcCkgewogICAgY2FudmFzLndpZHRoID0gaW1hZ2VCaXRtYXAud2lkdGg7CiAgICBjYW52YXMuaGVpZ2h0ID0gaW1hZ2VCaXRtYXAuaGVpZ2h0OwogICAgY2FudmFzLmdldENvbnRleHQoJzJkJykuZHJhd0ltYWdlKGltYWdlQml0bWFwLCAwLCAwKTsKfQoKZnVuY3Rpb24gc3RvcENhbWVyYShlcnJvcikgewogICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICBpZiAodmlkZW9EZXZpY2UpIHZpZGVvRGV2aWNlLnN0b3AoKTsgIC8vIHR1cm4gb2ZmIHRoZSBjYW1lcmEKfQoKcGhvdG8uYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHsKICAgIC8vIEFmdGVyIHRoZSBpbWFnZSBsb2FkcywgZGlzY2FyZCB0aGUgaW1hZ2Ugb2JqZWN0IHRvIHJlbGVhc2UgdGhlIG1lbW9yeQogICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodGhpcy5zcmMpOwp9KTsK"},{"version":3,"sources":["Enrollment.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Enrollment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <video muted id=\"video\" width=\"100%\" height=\"100%\" autoplay></video>\n        <canvas id=\"frame\" width=\"640\" height=\"480\"></canvas>\n        <img id=\"photo\" src=\"blob:https://dandv.github.io/539e4d75-a281-465f-a1a2-0ca884374435\">\n        <button id=\"stop\">Stop frame grab</button>\n    </div>\n</template>\n\n<script>\n    /* eslint-disable no-console */\n    export default {\n        name: 'Enrollment'\n    }\n    // // Prefer camera resolution nearest to 1280x720.\n    // var constraints = { audio: false, video: { width: 1280, height: 720 } };\n    //\n    //\n    // navigator.mediaDevices.getUserMedia(constraints)\n    //     .then(function(mediaStream) {\n    //         var video = document.querySelector('video');\n    //         video.srcObject = mediaStream;\n    //         video.onloadedmetadata = function() {\n    //             video.play();\n    //         };\n    //     })\n    //     .catch(function(err) { console.log(err.name + \": \" + err.message); }); // always check for errors at the end.\n\n    let videoDevice;\n    let canvas = document.getElementById('canvas');\n    let photo = document.getElementById('photo');\n\n    navigator.mediaDevices.getUserMedia({video: true}).then(gotMedia);\n\n    function gotMedia(mediaStream) {\n        // Extract video track.\n        videoDevice = mediaStream.getVideoTracks()[0];\n        // Check if this device supports a picture mode...\n        let captureDevice = new ImageCapture(videoDevice);\n        if (captureDevice) {\n            captureDevice.takePhoto().then(processPhoto).catch(stopCamera);\n            captureDevice.grabFrame().then(processFrame).catch(stopCamera);\n        }\n    }\n\n    function processPhoto(blob) {\n        photo.src = window.URL.createObjectURL(blob);\n    }\n\n    function processFrame(imageBitmap) {\n        canvas.width = imageBitmap.width;\n        canvas.height = imageBitmap.height;\n        canvas.getContext('2d').drawImage(imageBitmap, 0, 0);\n    }\n\n    function stopCamera(error) {\n        console.error(error);\n        if (videoDevice) videoDevice.stop();  // turn off the camera\n    }\n\n    photo.addEventListener('load', function () {\n        // After the image loads, discard the image object to release the memory\n        window.URL.revokeObjectURL(this.src);\n    });\n</script>\n\n<style scoped>\n\n</style>\n"]}]}