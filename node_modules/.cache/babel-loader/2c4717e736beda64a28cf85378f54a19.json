{"remainingRequest":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/babel-loader/lib/index.js!/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewsmith/Computer Science/School/CompSci326/326Project/src/components/Enrollment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/src/components/Enrollment.vue","mtime":1575154029448},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewsmith/Computer Science/School/CompSci326/326Project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFbnJvbGxtZW50JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc25hcHNob3REYXRhOiAnJwogICAgfTsKICB9Cn07Cgp2YXIgTm9kZVdlYmNhbSA9IHJlcXVpcmUoIm5vZGUtd2ViY2FtIik7IC8vRGVmYXVsdCBvcHRpb25zCgoKdmFyIG9wdHMgPSB7CiAgLy9QaWN0dXJlIHJlbGF0ZWQKICB3aWR0aDogMTI4MCwKICBoZWlnaHQ6IDcyMCwKICBxdWFsaXR5OiAxMDAsCiAgLy9EZWxheSBpbiBzZWNvbmRzIHRvIHRha2Ugc2hvdAogIC8vaWYgdGhlIHBsYXRmb3JtIHN1cHBvcnRzIG1pbGlzZWNvbmRzCiAgLy91c2UgYSBmbG9hdCAoMC4xKQogIC8vQ3VycmVudGx5IG9ubHkgb24gd2luZG93cwogIGRlbGF5OiAwLAogIC8vU2F2ZSBzaG90cyBpbiBtZW1vcnkKICBzYXZlU2hvdHM6IHRydWUsCiAgLy8gW2pwZWcsIHBuZ10gc3VwcG9ydCB2YXJpZXMKICAvLyBXZWJjYW0uT3V0cHV0VHlwZXMKICBvdXRwdXQ6ICJqcGVnIiwKICAvL1doaWNoIGNhbWVyYSB0byB1c2UKICAvL1VzZSBXZWJjYW0ubGlzdCgpIGZvciByZXN1bHRzCiAgLy9mYWxzZSBmb3IgZGVmYXVsdCBkZXZpY2UKICBkZXZpY2U6IGZhbHNlLAogIC8vIFtsb2NhdGlvbiwgYnVmZmVyLCBiYXNlLzY0XQogIC8vIFdlYmNhbS5DYWxsYmFja1JldHVyblR5cGVzCiAgY2FsbGJhY2tSZXR1cm46ICJsb2NhdGlvbiIsCiAgLy9Mb2dnaW5nCiAgdmVyYm9zZTogZmFsc2UKfTsKTm9kZVdlYmNhbS5jYXB0dXJlKCJ0ZXN0X3BpY3R1cmUiLCBvcHRzLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7CiAgdGhpcy5zbmFwc2hvdERhdGEgPSBkYXRhOwp9KTs="},{"version":3,"sources":["Enrollment.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA;AANA,CAAA;;AASA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA,C,CAEA;;;AAEA,IAAA,IAAA,GAAA;AAEA;AACA,EAAA,KAAA,EAAA,IAHA;AAIA,EAAA,MAAA,EAAA,GAJA;AAKA,EAAA,OAAA,EAAA,GALA;AAMA;AACA;AACA;AACA;AACA,EAAA,KAAA,EAAA,CAVA;AAWA;AACA,EAAA,SAAA,EAAA,IAZA;AAaA;AACA;AACA,EAAA,MAAA,EAAA,MAfA;AAgBA;AACA;AACA;AACA,EAAA,MAAA,EAAA,KAnBA;AAoBA;AACA;AACA,EAAA,cAAA,EAAA,UAtBA;AAuBA;AACA,EAAA,OAAA,EAAA;AAxBA,CAAA;AA0BA,UAAA,CAAA,OAAA,CAAA,cAAA,EAAA,IAAA,EAAA,UAAA,GAAA,EAAA,IAAA,EAAA;AAEA,OAAA,YAAA,GAAA,IAAA;AAEA,CAJA","sourcesContent":["<template>\n    <div>\n        <h2>Snapshot:</h2>\n        <img :src=\"snapshotData\">\n    </div>\n</template>\n\n<script>\n    /* eslint-disable no-console */\n    export default {\n        name: 'Enrollment',\n        data() {\n            return {\n                snapshotData: ''\n            }\n        }\n    }\n\n    var NodeWebcam = require( \"node-webcam\" );\n\n    //Default options\n\n    var opts = {\n\n        //Picture related\n        width: 1280,\n        height: 720,\n        quality: 100,\n        //Delay in seconds to take shot\n        //if the platform supports miliseconds\n        //use a float (0.1)\n        //Currently only on windows\n        delay: 0,\n        //Save shots in memory\n        saveShots: true,\n        // [jpeg, png] support varies\n        // Webcam.OutputTypes\n        output: \"jpeg\",\n        //Which camera to use\n        //Use Webcam.list() for results\n        //false for default device\n        device: false,\n        // [location, buffer, base/64]\n        // Webcam.CallbackReturnTypes\n        callbackReturn: \"location\",\n        //Logging\n        verbose: false\n    };\n    NodeWebcam.capture( \"test_picture\", opts, function( err, data ) {\n\n        this.snapshotData = data;\n\n    });\n\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}